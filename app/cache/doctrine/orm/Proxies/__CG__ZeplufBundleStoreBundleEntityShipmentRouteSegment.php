<?php

namespace Proxies\__CG__\Zepluf\Bundle\StoreBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ShipmentRouteSegment extends \Zepluf\Bundle\StoreBundle\Entity\ShipmentRouteSegment implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setEstimatedStartDate($estimatedStartDate)
    {
        $this->__load();
        return parent::setEstimatedStartDate($estimatedStartDate);
    }

    public function getEstimatedStartDate()
    {
        $this->__load();
        return parent::getEstimatedStartDate();
    }

    public function setEstimatedArrivalDate($estimatedArrivalDate)
    {
        $this->__load();
        return parent::setEstimatedArrivalDate($estimatedArrivalDate);
    }

    public function getEstimatedArrivalDate()
    {
        $this->__load();
        return parent::getEstimatedArrivalDate();
    }

    public function setActualStartDate($actualStartDate)
    {
        $this->__load();
        return parent::setActualStartDate($actualStartDate);
    }

    public function getActualStartDate()
    {
        $this->__load();
        return parent::getActualStartDate();
    }

    public function setActualArrivalDate($actualArrivalDate)
    {
        $this->__load();
        return parent::setActualArrivalDate($actualArrivalDate);
    }

    public function getActualArrivalDate()
    {
        $this->__load();
        return parent::getActualArrivalDate();
    }

    public function setTrackId($trackId)
    {
        $this->__load();
        return parent::setTrackId($trackId);
    }

    public function getTrackId()
    {
        $this->__load();
        return parent::getTrackId();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setShipmentMethodType(\Zepluf\Bundle\StoreBundle\Entity\ShipmentMethodType $shipmentMethodType = NULL)
    {
        $this->__load();
        return parent::setShipmentMethodType($shipmentMethodType);
    }

    public function getShipmentMethodType()
    {
        $this->__load();
        return parent::getShipmentMethodType();
    }

    public function setCarrier(\Zepluf\Bundle\StoreBundle\Entity\Carrier $carrier = NULL)
    {
        $this->__load();
        return parent::setCarrier($carrier);
    }

    public function getCarrier()
    {
        $this->__load();
        return parent::getCarrier();
    }

    public function setShipment(\Zepluf\Bundle\StoreBundle\Entity\Shipment $shipment = NULL)
    {
        $this->__load();
        return parent::setShipment($shipment);
    }

    public function getShipment()
    {
        $this->__load();
        return parent::getShipment();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'estimatedStartDate', 'estimatedArrivalDate', 'actualStartDate', 'actualArrivalDate', 'trackId', 'createdAt', 'updatedAt', 'shipmentMethodType', 'carrier', 'shipment');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}