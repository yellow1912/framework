<?php

namespace Proxies\__CG__\Zepluf\Bundle\StoreBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class InvoiceItem extends \Zepluf\Bundle\StoreBundle\Entity\InvoiceItem implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setQuantity($quantity)
    {
        $this->__load();
        return parent::setQuantity($quantity);
    }

    public function getQuantity()
    {
        $this->__load();
        return parent::getQuantity();
    }

    public function setAmount($amount)
    {
        $this->__load();
        return parent::setAmount($amount);
    }

    public function getAmount()
    {
        $this->__load();
        return parent::getAmount();
    }

    public function setItemDescription($itemDescription)
    {
        $this->__load();
        return parent::setItemDescription($itemDescription);
    }

    public function getItemDescription()
    {
        $this->__load();
        return parent::getItemDescription();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setIsTaxable($isTaxable)
    {
        $this->__load();
        return parent::setIsTaxable($isTaxable);
    }

    public function getIsTaxable()
    {
        $this->__load();
        return parent::getIsTaxable();
    }

    public function setInventoryItemId($inventoryItemId)
    {
        $this->__load();
        return parent::setInventoryItemId($inventoryItemId);
    }

    public function getInventoryItemId()
    {
        $this->__load();
        return parent::getInventoryItemId();
    }

    public function setProductId($productId)
    {
        $this->__load();
        return parent::setProductId($productId);
    }

    public function getProductId()
    {
        $this->__load();
        return parent::getProductId();
    }

    public function setProductFeatureId($productFeatureId)
    {
        $this->__load();
        return parent::setProductFeatureId($productFeatureId);
    }

    public function getProductFeatureId()
    {
        $this->__load();
        return parent::getProductFeatureId();
    }

    public function setInvoice(\Zepluf\Bundle\StoreBundle\Entity\Invoice $invoice = NULL)
    {
        $this->__load();
        return parent::setInvoice($invoice);
    }

    public function getInvoice()
    {
        $this->__load();
        return parent::getInvoice();
    }

    public function setAdjustmentType(\Zepluf\Bundle\StoreBundle\Entity\AdjustmentType $adjustmentType = NULL)
    {
        $this->__load();
        return parent::setAdjustmentType($adjustmentType);
    }

    public function getAdjustmentType()
    {
        $this->__load();
        return parent::getAdjustmentType();
    }

    public function setInvoiceItemType(\Zepluf\Bundle\StoreBundle\Entity\InvoiceItemType $invoiceItemType = NULL)
    {
        $this->__load();
        return parent::setInvoiceItemType($invoiceItemType);
    }

    public function getInvoiceItemType()
    {
        $this->__load();
        return parent::getInvoiceItemType();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'quantity', 'amount', 'itemDescription', 'type', 'isTaxable', 'inventoryItemId', 'productId', 'productFeatureId', 'invoice', 'adjustmentType', 'invoiceItemType');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}